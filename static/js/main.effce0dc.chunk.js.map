{"version":3,"sources":["components/Card/Card.js","components/Colors/Colors.js","components/App/App.js","index.js"],"names":["Card","pokemonInfo","className","src","sprites","front_default","alt","name","types","type","stats","base_stat","weight","moves","length","Colors","bug","dragon","fairy","fire","ghost","ground","normal","psychic","steel","dark","electric","fighting","flying","grass","ice","poison","rock","water","App","props","state","data","pokemonData","limit","isClicked","isFiltered","options","getPokemonInfo","bind","handleClick","handleSelect","this","loadPokemons","handleOptions","axios","get","then","res","setState","results","getPokemon","catch","error","console","log","map","val","url","sort","a","b","id","e","target","value","onChange","hidden","key","filter","el","undefined","index","slot","style","background","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.effce0dc.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Card.css';\r\n\r\n\r\nconst Card = ({pokemonInfo}) => {\r\n\t\r\n\t\r\n\treturn (\r\n\t\t\t<div className=\"info_inner\">\r\n\t\t\t\t<img className=\"info-img\" src={pokemonInfo.sprites.front_default} alt=\"info\"/>\r\n\t\t\t\t<h1 className=\"capitalize\">{pokemonInfo.name}</h1>\r\n\t\t\t\t<table className=\"info-table\">\r\n\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\tType\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t<td className=\"capitalize\">\r\n\t\t\t\t\t\t\t\t{pokemonInfo.types[0].type.name}\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\tAttack\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t{pokemonInfo.stats[4].base_stat}\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\tDefence\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t{pokemonInfo.stats[3].base_stat}\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\tHP\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t{pokemonInfo.stats[5].base_stat}\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\tSP Attack\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t{pokemonInfo.stats[2].base_stat}\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\tSP Defence\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t{pokemonInfo.stats[1].base_stat}\t\t\t\t\t\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\tSpeed\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t{pokemonInfo.stats[0].base_stat}\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\tWeight\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t{pokemonInfo.weight}\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\tTotal moves\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t{pokemonInfo.moves.length}\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</table>\r\n\t\t\t</div>\r\n\t\t)\r\n}\r\n\r\nexport default Card","const Colors = {\n    bug: '#729f3f',\n    dragon: '#53a4cf',\n    fairy: '#fdb9e9',\n    fire: '#fd7d24',\n    ghost: '#7b62a3',\n    ground: '#f7de3f',\n    normal: '#a4acaf',\n    psychic: '#f366b9',\n    steel: '#9eb7b',\n    dark: '#707070',\n    electric: '#eed535',\n    fighting: '#d56723',\n    flying: '#3dc7ef',\n    grass: '#9bcc50',\n    ice: '#51c4e7',\n    poison: '#b97fc9',\n    rock: '#a38c21',\n    water: '#4592c4'\n}\n\nexport default Colors;","import React from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport Card from '../Card/Card';\nimport Colors from '../Colors/Colors';\n\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      data:'',\n      pokemonData: [],\n      pokemonInfo: [],\n      limit: 12,\n      isClicked: false,\n      type: '',\n      isFiltered: false,\n      options: []\n    }\n\n    this.getPokemonInfo = this.getPokemonInfo.bind(this)\n    this.handleClick = this.handleClick.bind(this)\n    this.handleSelect = this.handleSelect.bind(this)\n  }\n  \n\n    componentDidMount() {\n      this.loadPokemons()\n      this.handleOptions()\n    }\n    \n    //fetching pokemons list limited by 12 every call\n    loadPokemons() {\n        axios.get(`https://pokeapi.co/api/v2/pokemon?limit=12&offset=${this.state.limit - 12}`)\n        .then((res) => {\n          this.setState({\n            data: res.data.results\n          }, () => this.getPokemon(this.state.data))\n      })\n        .catch((error) => {\n          console.log(error);\n      })\n    }\n    \n    //mapping through gotten list to get pokemons urls, then fetching data from pokemons urls and putting every single pokemon object in an array for the future mapping through\n    getPokemon(data) {\n      data.map((val) => {\n        return (\n          axios.get(val.url)\n          .then((res) =>  {\n             this.setState({\n              pokemonData: [...this.state.pokemonData, res.data].sort((a, b) => a.id - b.id)\n            })\n          })\n        )})\n      }\n    \n    //fetching single pokemon data by clicking the info button\n    getPokemonInfo(e) {\n        axios.get(`https://pokeapi.co/api/v2/pokemon/${e.target.id}`)\n          .then((res) => {\n            this.setState({\n              pokemonInfo: res.data,\n              isClicked: true\n            })\n          })\n          .catch((error) => {\n          console.log(error);\n          })        \n        }\n    \n    //loading 12 more pokemons on the main page\n    handleClick() {\n      this.setState({\n        limit: this.state.limit + 12\n      }, () => this.loadPokemons())\n    }\n    \n    //fetching pokemons types list for drop menu\n    handleOptions() {\n      axios.get('https://pokeapi.co/api/v2/type')\n        .then((res) => {\n          this.setState({\n            options: res.data.results\n          })\n        })\n        .catch((error) => {\n          console.log(error);\n        })\n      }\n    \n    //handling selected pokemon type \n    handleSelect(e) {\n      this.setState({\n        type: e.target.value,\n        isFiltered: e.target.value === 'Showall' ? false : true\n      })\n    }\n\n\n  render() {\n\n  const { pokemonData, pokemonInfo, isClicked, type, isFiltered, options } = this.state\n\n  return (\n\n     <div className=\"wrapper\">\n\n      <div className=\"header\">\n       <select value={type} className=\"select capitalize\" onChange={this.handleSelect}>\n        <option hidden>Choose type</option>\n        <option value=\"Showall\">Show all</option>\n        {options ? options.map(val => <option key={val.name} className=\"capitalize\" value={val.name}>{val.name}</option>) : null}\n       </select>\n\n\n       <h1>Pokedex</h1>\n      </div>  \n        <div className=\"main\">\n          <div className=\"cards\">\n            {pokemonData[0] ? \n              pokemonData.filter(el => isFiltered ? (el.types[1] !== undefined && el.types[1].type.name === type) || el.types[0].type.name === type : el)\n              .map((val, index) => \n\n            <div className=\"card\" key={val.id}>\n              <img className=\"image\" src={val.sprites.front_default} alt={val.name}/>\n              <p className=\"name\">{val.name}</p>\n                {val.types.sort((a, b) => a.slot - b.slot).map((val)=> <p style={{background: Colors[val.type.name]}} key={val.type.name} className=\"type capitalize\">{val.type.name + ' '}</p>)}\n              <button className=\"info-btn\" id={val.id} onClick={this.getPokemonInfo}>Show info</button>\n          </div>\n\n          ) : null}\n\n          <button onClick={this.handleClick} className=\"loadMore-btn\">Load more</button>  \n\n        </div>\n        <div className=\"info\">\n          {isClicked ? <Card pokemonInfo={pokemonInfo}/> : null}\n        </div>\n      </div>\n    </div>\n  );\n}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}